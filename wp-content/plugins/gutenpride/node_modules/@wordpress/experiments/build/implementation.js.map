{"version":3,"sources":["@wordpress/experiments/src/implementation.js"],"names":["CORE_MODULES_USING_EXPERIMENTS","registeredExperiments","requiredConsent","__dangerousOptInToUnstableAPIsOnlyForCoreModules","consent","moduleName","includes","Error","push","lock","unlock","object","privateData","__experiment","lockedData","set","get","WeakMap","Symbol","allowCoreModule","name","resetAllowedCoreModules","length","pop","resetRegisteredExperiments"],"mappings":"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","sourcesContent":["/**\n * wordpress/experimental â€“ the utilities to enable private cross-package\n * exports of experimental APIs.\n *\n * This \"implementation.js\" file is needed for the sake of the unit tests. It\n * exports more than the public API of the package to aid in testing.\n */\n\n/**\n * The list of core modules allowed to opt-in to the experimental APIs.\n */\nconst CORE_MODULES_USING_EXPERIMENTS = [\n\t'@wordpress/data',\n\t'@wordpress/editor',\n\t'@wordpress/blocks',\n\t'@wordpress/block-editor',\n\t'@wordpress/customize-widgets',\n\t'@wordpress/edit-site',\n\t'@wordpress/edit-post',\n\t'@wordpress/edit-widgets',\n\t'@wordpress/block-library',\n];\n\n/**\n * A list of core modules that already opted-in to\n * the experiments package.\n */\nconst registeredExperiments = [];\n\n/*\n * Warning for theme and plugin developers.\n *\n * The use of experimental developer APIs is intended for use by WordPress Core\n * and the Gutenberg plugin exclusively.\n *\n * Dangerously opting in to using these APIs is NOT RECOMMENDED. Furthermore,\n * the WordPress Core philosophy to strive to maintain backward compatibility\n * for third-party developers DOES NOT APPLY to experimental APIs.\n *\n * THE CONSENT STRING FOR OPTING IN TO THESE APIS MAY CHANGE AT ANY TIME AND\n * WITHOUT NOTICE. THIS CHANGE WILL BREAK EXISTING THIRD-PARTY CODE. SUCH A\n * CHANGE MAY OCCUR IN EITHER A MAJOR OR MINOR RELEASE.\n */\nconst requiredConsent =\n\t'I know using unstable features means my plugin or theme will inevitably break on the next WordPress release.';\n\nexport const __dangerousOptInToUnstableAPIsOnlyForCoreModules = (\n\tconsent,\n\tmoduleName\n) => {\n\tif ( ! CORE_MODULES_USING_EXPERIMENTS.includes( moduleName ) ) {\n\t\tthrow new Error(\n\t\t\t`You tried to opt-in to unstable APIs as module \"${ moduleName }\". ` +\n\t\t\t\t'This feature is only for JavaScript modules shipped with WordPress core. ' +\n\t\t\t\t'Please do not use it in plugins and themes as the unstable APIs will be removed ' +\n\t\t\t\t'without a warning. If you ignore this error and depend on unstable features, ' +\n\t\t\t\t'your product will inevitably break on one of the next WordPress releases.'\n\t\t);\n\t}\n\tif ( registeredExperiments.includes( moduleName ) ) {\n\t\tthrow new Error(\n\t\t\t`You tried to opt-in to unstable APIs as module \"${ moduleName }\" which is already registered. ` +\n\t\t\t\t'This feature is only for JavaScript modules shipped with WordPress core. ' +\n\t\t\t\t'Please do not use it in plugins and themes as the unstable APIs will be removed ' +\n\t\t\t\t'without a warning. If you ignore this error and depend on unstable features, ' +\n\t\t\t\t'your product will inevitably break on one of the next WordPress releases.'\n\t\t);\n\t}\n\tif ( consent !== requiredConsent ) {\n\t\tthrow new Error(\n\t\t\t`You tried to opt-in to unstable APIs without confirming you know the consequences. ` +\n\t\t\t\t'This feature is only for JavaScript modules shipped with WordPress core. ' +\n\t\t\t\t'Please do not use it in plugins and themes as the unstable APIs will removed ' +\n\t\t\t\t'without a warning. If you ignore this error and depend on unstable features, ' +\n\t\t\t\t'your product will inevitably break on the next WordPress release.'\n\t\t);\n\t}\n\tregisteredExperiments.push( moduleName );\n\n\treturn {\n\t\tlock,\n\t\tunlock,\n\t};\n};\n\n/**\n * Binds private data to an object.\n * It does not alter the passed object in any way, only\n * registers it in an internal map of private data.\n *\n * The private data can't be accessed by any other means\n * than the `unlock` function.\n *\n * @example\n * ```js\n * const object = {};\n * const privateData = { a: 1 };\n * lock( object, privateData );\n *\n * object\n * // {}\n *\n * unlock( object );\n * // { a: 1 }\n * ```\n *\n * @param {Object|Function} object      The object to bind the private data to.\n * @param {any}             privateData The private data to bind to the object.\n */\nfunction lock( object, privateData ) {\n\tif ( ! object ) {\n\t\tthrow new Error( 'Cannot lock an undefined object.' );\n\t}\n\tif ( ! ( __experiment in object ) ) {\n\t\tobject[ __experiment ] = {};\n\t}\n\tlockedData.set( object[ __experiment ], privateData );\n}\n\n/**\n * Unlocks the private data bound to an object.\n *\n * It does not alter the passed object in any way, only\n * returns the private data paired with it using the `lock()`\n * function.\n *\n * @example\n * ```js\n * const object = {};\n * const privateData = { a: 1 };\n * lock( object, privateData );\n *\n * object\n * // {}\n *\n * unlock( object );\n * // { a: 1 }\n * ```\n *\n * @param {any} object The object to unlock the private data from.\n * @return {any} The private data bound to the object.\n */\nfunction unlock( object ) {\n\tif ( ! object ) {\n\t\tthrow new Error( 'Cannot unlock an undefined object.' );\n\t}\n\tif ( ! ( __experiment in object ) ) {\n\t\tthrow new Error(\n\t\t\t'Cannot unlock an object that was not locked before. '\n\t\t);\n\t}\n\n\treturn lockedData.get( object[ __experiment ] );\n}\n\nconst lockedData = new WeakMap();\n\n/**\n * Used by lock() and unlock() to uniquely identify the private data\n * related to a containing object.\n */\nconst __experiment = Symbol( 'Experiment ID' );\n\n// Unit tests utilities:\n\n/**\n * Private function to allow the unit tests to allow\n * a mock module to access the experimental APIs.\n *\n * @param {string} name The name of the module.\n */\nexport function allowCoreModule( name ) {\n\tCORE_MODULES_USING_EXPERIMENTS.push( name );\n}\n\n/**\n * Private function to allow the unit tests to set\n * a custom list of allowed modules.\n */\nexport function resetAllowedCoreModules() {\n\twhile ( CORE_MODULES_USING_EXPERIMENTS.length ) {\n\t\tCORE_MODULES_USING_EXPERIMENTS.pop();\n\t}\n}\n/**\n * Private function to allow the unit tests to reset\n * the list of registered experiments.\n */\nexport function resetRegisteredExperiments() {\n\twhile ( registeredExperiments.length ) {\n\t\tregisteredExperiments.pop();\n\t}\n}\n"]}